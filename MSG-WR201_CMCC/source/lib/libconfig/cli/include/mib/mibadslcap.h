    /*
     * Notice: file generated by MIBMAKE from mibadslcap.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibadslcap.mdf
     */
#line 3 "mibadslcap.mdf"
/*
 * $Id: mibadslcap.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1996 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 31 "mibadslcap.mdf"
#if ( ! defined( MIBADSLCAP_H ))
# define MIBADSLCAP_H
#include "mibaddr.h"

/* BER Test states */
typedef enum{
    ATT_BERT_WAITING_FOR_511_SYNC = 1,
    ATT_BERT_LOCAL_LOOP_ACTIVE,
    ATT_BERT_ACTIVE,
    ATT_BERT_DEACTIVE,
    ATT_BERT_LOOP_BACK_SETUP,
    ATT_BERT_START_UP,
    ATT_BERT_OVERFLOW,
    ATT_BERT_LOS
}BertStates;

/*
 * Our parameter table is made external as the profile is used
 * within other profiles.
 */
extern const MibFieldComplexParams      adslCapStatusParams;
extern const MibFieldComplexParams      adslCapStatisticParams;


    /*
     * AdslPortUpTime:
     *
     *
     *  days Number of days the port has been up.
     *
     *  hours Number of hours, in 24 hour format, the port has been up.
     *
     *  minutes Number of minutes the port has been up.
     */
typedef struct adslPortUpTime {
#line 242 "mibadslcap.mdf"
    Byte                                days;
#line 246 "mibadslcap.mdf"
    Byte                                hours;
#line 250 "mibadslcap.mdf"
    Byte                                minutes;
}
#if ( USERIF & CLI )
__PACK__
#endif
AdslPortUpTime;

    /*
     * MibProfAdslCapStatus:
     *
     * AdslCap status parameters.
     *
     *  ifStatusIfGrpIndex Interface groups index assigned to this physical
     *                                  port.
     *
     *  ifStatusUnitType Unit types defines if the node is operating Central
     *                                  Office or Customer Premise equipment
     *                                  software.
     *
     *  ifStatusIfState Display of current interface state.
     *
     *  ifStatusOpUpRate Operational up stream rate. Zero means unknown.
     *
     *  ifStatusOpDwnRate Operational down stream rate. Zero means unknown.
     *
     *  ifStatusMajorFirmwareVer Firmware major version ID.
     *
     *  ifStatusMinorFirmwareVer Firmwares minor version ID.
     *
     *  ifStatusHardwareVer Hardware chip version.
     *
     *  ifStatusOpUpStrmConst Operational up stream constellation.
     *
     *  ifStatusOpDwnStrmConst Operational down stream constellation.
     *
     *  ifStatusOpDwnBaud Operational down stream baud.
     */
typedef struct mibProfAdslCapStatus {
#line 262 "mibadslcap.mdf"
    int                                 ifStatusIfGrpIndex;
#line 267 "mibadslcap.mdf"
    int                                 ifStatusUnitType;
#line 273 "mibadslcap.mdf"
    int                                 ifStatusIfState;
#line 278 "mibadslcap.mdf"
    int                                 ifStatusOpUpRate;
#line 283 "mibadslcap.mdf"
    int                                 ifStatusOpDwnRate;
#line 288 "mibadslcap.mdf"
    int                                 ifStatusMajorFirmwareVer;
#line 293 "mibadslcap.mdf"
    int                                 ifStatusMinorFirmwareVer;
#line 298 "mibadslcap.mdf"
    int                                 ifStatusHardwareVer;
#line 303 "mibadslcap.mdf"
    int                                 ifStatusOpUpStrmConst;
#line 308 "mibadslcap.mdf"
    int                                 ifStatusOpDwnStrmConst;
#line 313 "mibadslcap.mdf"
    int                                 ifStatusOpDwnBaud;
}
#if ( USERIF & CLI )
__PACK__
#endif
MibProfAdslCapStatus;

    /*
     * MibProfAdslCapStatistic:
     *
     * AdslCap statistical parameters.
     *
     *  ifStatIfUpTimer Line up seconds timer.
     *
     *  ifStatRxSigPresent State if the receive signal is present or not.
     *
     *  ifStatLineQuality While the port is in the up state, this parameter
     *                                  displays the line quality.
     *
     *  ifStatIfUpDwnCntr Interface Up Down counter value displays the number
     *                                  of times the interface trasitions from
     *                                  a down to up state.
     *
     *  ifStatSelfTest Hardware/firmware self test results.
     *
     *  ifStatRsErrors Down stream receive Reed Solomon errors.
     *
     *  ifStatRsCorrErrs Down stream receive Reed Solomon corrected errors.
     *
     *  ifStatTxPower Transmit power in DB.
     *
     *  ifStatRxAtten Receiver attenuation in db.
     *
     *  ifStatConnectSq While the port is in the up state, this parameter
     *                                  displays the connection established
     *                                  line quality. If the Line Quality
     *                                  parameter exceedes this value by 6 db,
     *                                  for 22 seconds, then the CO drops the
     *                                  connection and re-trains.
     *
     *  ifStatHdlcRxCrcErrCnt While the port is in the up state, this parameter
     *                                  displays the number of HDLC CRC errors
     *                                  associated with this channel. If there
     *                                  are too many errors, then this channel
     *                                  lost communications with the remote
     *                                  node and is restarted.
     *
     *  ifStatBertTimer If the CPE and COE units are physically connected. When
     *                                  this time period expires the BER Test
     *                                  is stopped.
     *
     *  ifStatBertEna To enable the ADSL BER test set this parameter to yes.
     *
     *  ifStatBertOpState State of the BER Test. If the state is
     *                                  WAITING_FOR_511_SYNC, the remote side
     *                                  has not started its BER Test. If the
     *                                  line is not in the port up state, then
     *                                  local loopback is enabled and the BER
     *                                  test is started.
     *
     *  ifStatBertErrorCntr Number of errors encountered while the BER test has
     *                                  run.
     */
typedef struct mibProfAdslCapStatistic {
#line 326 "mibadslcap.mdf"
    AdslPortUpTime                      ifStatIfUpTimer;
#line 331 "mibadslcap.mdf"
    int                                 ifStatRxSigPresent;
#line 336 "mibadslcap.mdf"
    char                                ifStatLineQuality;
#line 342 "mibadslcap.mdf"
    int                                 ifStatIfUpDwnCntr;
#line 349 "mibadslcap.mdf"
    int                                 ifStatSelfTest;
#line 354 "mibadslcap.mdf"
    unsigned int                        ifStatRsErrors;
#line 359 "mibadslcap.mdf"
    unsigned int                        ifStatRsCorrErrs;
#line 364 "mibadslcap.mdf"
    unsigned int                        ifStatTxPower;
#line 369 "mibadslcap.mdf"
    unsigned int                        ifStatRxAtten;
#line 374 "mibadslcap.mdf"
    char                                ifStatConnectSq;
#line 382 "mibadslcap.mdf"
    unsigned int                        ifStatHdlcRxCrcErrCnt;
#line 390 "mibadslcap.mdf"
    int                                 ifStatBertTimer;
#line 395 "mibadslcap.mdf"
    Boolean                             ifStatBertEna;
#line 399 "mibadslcap.mdf"
    int                                 ifStatBertOpState;
#line 407 "mibadslcap.mdf"
    unsigned int                        ifStatBertErrorCntr;
}
#if ( USERIF & CLI )
__PACK__
#endif
MibProfAdslCapStatistic;
#line 454 "mibadslcap.mdf"

#endif /* (( ! defined( MIBADSLCAP_H ) ) && ( PLATFORM & (PDSL | TNT))) */


    /*
     * Notice: file generated by MIBMAKE from mibinans.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibinans.mdf
     */
#line 3 "mibinans.mdf"
/*
 * $Id: mibinans.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1996 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 25 "mibinans.mdf"

#if ( ! defined( MIBINANS_H ) )
#define MIBINANS_H

#include "mibgen.h"
#include "mibglob.h"
#include "mibclid.h"

    /*
     * Bitmask values for profFlags
     */
#define MIBINANS_PERMCONN       1
#define MIBINANS_RADIUSOUTDIAL  2

    /*
     * How to build the factory instance of this profile.
     */
extern ConstPtr
mibFactoryAnsOptions( MibProfileType	mibType,
		      Uint32		info );

    /*
     * Our parameter table is made external as the profile is used
     * within other profiles.
     */
extern const MibFieldComplexParams	ansOptionsParams;


    /*
     * AnsOptions:
     *
     * Answer configuration options. These are things that exist in the answer
     * profile, but have to be copied to all other profiles for historical
     * reasons. Some internal only fields are also stashed here.
     *
     *  profileRequired
     *
     *  forceDefault
     *
     *  profFlags
     *
     *  clidAuthMode
     */
typedef struct st_ansOptions {
#line 71 "mibinans.mdf"
    Boolean                             profileRequired;
#line 76 "mibinans.mdf"
    Boolean                             forceDefault;
#line 81 "mibinans.mdf"
    Uint32                              profFlags;
#line 86 "mibinans.mdf"
#if ( MDF_CLID == FYES )
    ClidAuthMode                        clidAuthMode;
#endif /* ( MDF_CLID == FYES ) */
}
#if ( USERIF & CLI )
__PACK__
#endif
AnsOptions;
#line 143 "mibinans.mdf"

#endif /* ( ! defined( MIBINANS_H ) ) */


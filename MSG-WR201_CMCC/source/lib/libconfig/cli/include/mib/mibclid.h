    /*
     * Notice: file generated by MIBMAKE from mibclid.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibclid.mdf
     */
#line 3 "mibclid.mdf"
/*
 * $Id: mibclid.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1996 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

    /*
     * Define the enumerated type ClidAuthMode and it's CLI lookup
     * tables.
     */
#line 29 "mibclid.mdf"

#if ! defined( MIBCLID_H )
#define MIBCLID_H

#include "mibgen.h"

#if ( USERIF & CLI )

extern const MibFieldEnumParams	clidAuthModeParams;

#endif /* ( USERIF & CLI ) */


    /*
     * ClidAuthMode:
     *
     * ID authentication types:
     *
     *  ID_AUTH_IGNORE Don't require a matching ID.
     *
     *  ID_AUTH_CLID_PREFER Authenticate using the CLID if available, otherwise
     *                                  fall back to using the encapsulation
     *                                  protocol's authentication.
     *
     *  ID_AUTH_CLID_REQUIRE The CLID must be valid and match the value in the
     *                                  stored profile. If the profile also
     *                                  requires pap/chap/etc then do that in
     *                                  addition.
     *
     *  ID_AUTH_CLID_ALMOST Authenticate using the CLID when RADIUS is
     *                                  available, otherwise fallback to using
     *                                  the encapsulation protocol's
     *                                  authentication.
     *
     *  ID_AUTH_DNIS_REQUIRE The Called # must be valid and match the value in
     *                                  the stored profile. If the profile also
     *                                  requires pap/chap/etc then do that in
     *                                  addition.
     *
     *  ID_AUTH_DNIS_PREFER Authenticate using the Called # if available,
     *                                  otherwise fall back to using the
     *                                  encapsulation protocol's
     *                                  authentication.
     */
typedef enum ClidAuthMode {
#line 56 "mibclid.mdf"
    ID_AUTH_IGNORE,
#line 59 "mibclid.mdf"
    ID_AUTH_CLID_PREFER,
#line 63 "mibclid.mdf"
    ID_AUTH_CLID_REQUIRE,
#line 67 "mibclid.mdf"
    ID_AUTH_CLID_ALMOST,
#line 71 "mibclid.mdf"
    ID_AUTH_DNIS_REQUIRE,
#line 76 "mibclid.mdf"
    ID_AUTH_DNIS_PREFER
} ClidAuthMode;


static __inline__ Bool
validClidAuthMode (int x)
{
    switch (x) {
#line 56 "mibclid.mdf"
    case ID_AUTH_IGNORE:
#line 59 "mibclid.mdf"
    case ID_AUTH_CLID_PREFER:
#line 63 "mibclid.mdf"
    case ID_AUTH_CLID_REQUIRE:
#line 67 "mibclid.mdf"
    case ID_AUTH_CLID_ALMOST:
#line 71 "mibclid.mdf"
    case ID_AUTH_DNIS_REQUIRE:
#line 76 "mibclid.mdf"
    case ID_AUTH_DNIS_PREFER:
        return TRUE;
    default:
        return FALSE;
    }
}
#line 96 "mibclid.mdf"

#endif /* MIBCLID_H */


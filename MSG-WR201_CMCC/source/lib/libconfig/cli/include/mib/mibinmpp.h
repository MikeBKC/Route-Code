    /*
     * Notice: file generated by MIBMAKE from mibinmpp.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibinmpp.mdf
     */
#line 3 "mibinmpp.mdf"
/*
 * $Id: mibinmpp.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1996 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 32 "mibinmpp.mdf"

#if (( ! defined( MIBINMPP_H ) ) && ( MDF_MPP == FYES ))
#define MIBINMPP_H

#include "mibgen.h"
#include "mibglob.h"
#include "mibmonitor.h"


    /*
     * How to build the factory instance of this profile.
     */
extern ConstPtr
mibFactoryMppOptions( MibProfileType	mibType,
		     Uint32		info );

    /*
     * Our parameter table is made external as the profile is used
     * within other profiles.
     */
extern const MibFieldComplexParams	mppOptionsParams;


    /*
     * MppOptions:
     *
     * Mpp configuration options.
     *
     *  mppEnabled Hidden, needed for answer profile.
     *
     *  auxSendPassword This is the password sent to the far end; used for MPP
     *                                  PAP-TOKEN-CHAP security.
     *
     *  fill1 filler, 32-bit boundary.
     *
     *  historyWeighType The algorithm to use to calculate the average link
     *                                  utilization. Bandwidth changes are
     *                                  performed on the average utilization,
     *                                  not current utilization.
     *
     *  mppMonitorType The direction to monitor link utilization. A unit can
     *                                  monitor transmit, transmit and receive,
     *                                  or turn off monitoring entirely.
     *
     *  incrementChannelCount Number of channels to increment as a block.
     *
     *  decrementChannelCount Number of channels to decrement as a block.
     *
     *  secondsOfHistory The number of seconds of history that link utilization
     *                                  is averaged over to make bandwidth
     *                                  changes.
     *
     *  addSecondsOfPersistence The number of seconds of that the average line
     *                                  utilization must exceed the target
     *                                  utilization before bandwidth will be
     *                                  added.
     *
     *  removeSecondsOfPersistence The number of seconds of that the average
     *                                  line utilization must fall below the
     *                                  target utilization before bandwidth
     *                                  will be reduced. Bandwidth will not be
     *                                  reduced if the reduced bandwidth would
     *                                  exceed the target utilization.
     *
     *  targetUtilization The default value for the target utilization.
     *                                  Bandwidth changes occur when the
     *                                  average utilization exceeds or falls
     *                                  below this value.
     */
typedef struct st_mppOptions {
#line 104 "mibinmpp.mdf"
    Boolean                             mppEnabled;
#line 110 "mibinmpp.mdf"
    char                                auxSendPassword[ MAX_PASSWORD_LENGTH + 1 ];
#line 116 "mibinmpp.mdf"
    char                                fill1[ 2 ];
#line 122 "mibinmpp.mdf"
    HistoryWeighType                    historyWeighType;
#line 129 "mibinmpp.mdf"
    MppMonitorType                      mppMonitorType;
#line 135 "mibinmpp.mdf"
    Uint16                              incrementChannelCount;
#line 140 "mibinmpp.mdf"
    Uint16                              decrementChannelCount;
#line 145 "mibinmpp.mdf"
    Uint16                              secondsOfHistory;
#line 151 "mibinmpp.mdf"
    Uint16                              addSecondsOfPersistence;
#line 157 "mibinmpp.mdf"
    Uint16                              removeSecondsOfPersistence;
#line 165 "mibinmpp.mdf"
    Uint16                              targetUtilization;
}
#if ( USERIF & CLI )
__PACK__
#endif
MppOptions;
#line 234 "mibinmpp.mdf"

#endif /* (( ! defined( MIBINMPP_H ) ) && ( MDF_MPP == FYES )) */


    /*
     * Notice: file generated by MIBMAKE from mibvrtr.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibvrtr.mdf
     */
#line 3 "mibvrtr.mdf"
/*
 * $Id: mibvrtr.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1995 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 25 "mibvrtr.mdf"

#if (( ! defined( MIBVRTR_H ) ) && ( MDF_VROUTER == FYES ))
#define MIBVRTR_H

#include "mibgen.h"
#include "miblog.h"
#include "mibstat.h"
#include "cli.h"
#include "mibslot.h"


    /* This file contains the internal representation of profiles and enums
     *  used by others profiles.
     */

extern const char* const		mibProfVRouter;

extern ConstPtr
mibFactoryVRouterProfile( MibProfileType	mibType,
			  ConstPtr		mibIndex,
			  Int			mibIndexLen );

extern Bool
validVRouterName( const char*	vRouterName,
		  char*		message,
		  Int*		messageLen );

     /*
      *The field ID of the Index Field for this profile.
      */
#define	MIB_VROUTER_INDEX_FIELD	        1

#define MIB_DEFAULT_VROUTER_INDEX	"master"

    /*
     * VRouterProfile:
     *
     * Defines a Virtual Private Network group.
     *
     *  name The name of a VRouter.
     *
     *  vRouterIpAddress System ip address for a VRouter.
     *
     *  assignBase The base address of a pool of addresses we can use to assign
     *                                  to clients.
     *
     *  assignCount The number of host addresses in the above pool. The
     *                                  addresses are contiguous.
     *
     *  poolName The name of this pool
     *
     *  poolSummary Flag, when set indicates that host addresses assigned from
     *                                  the pool should be marked as PRIVATE in
     *                                  the routing table and summarized to the
     *                                  world at large via a (constant) network
     *                                  advertisement for the whole pool.
     *
     *  ripPolicy Describes whether to use Poison reverse or Split Horizon
     *                                  policy. Global for the vrouter.
     *
     *  ripSummary Summarize subnets in RIP broadcasts per RFC 1058/RFC 1009.
     *
     *  ripTrigger When set to TRUE (its default value) it causes RIP to send
     *                                  triggered (incremental) updates.
     *                                  Otherwise full table updates are sent
     *                                  when a change in the routing table is
     *                                  noticed.
     */
typedef struct vRouterProfile {
#line 84 "mibvrtr.mdf"
//    char                              name[ MAX_NAME_LEN + 1 ];
    char                                name[ MAX_PROFILE_NAME_LENGTH + 1 ];
    Boolean                             active; 

#line 89 "mibvrtr.mdf"
    IpAddress                           vRouterIpAddress;
#line 94 "mibvrtr.mdf"
    IpAddress                           assignBase[ MAX_NVRAM_ASSIGN_POOL ];
#line 100 "mibvrtr.mdf"
    Word                                assignCount[ MAX_NVRAM_ASSIGN_POOL ];
#line 106 "mibvrtr.mdf"
    char                                poolName[ MAX_NVRAM_ASSIGN_POOL ][ POOL_NAME_LEN + 1 ];
#line 111 "mibvrtr.mdf"
    Boolean                             poolSummary;
#line 119 "mibvrtr.mdf"
    RipPolicy                           ripPolicy;
#line 125 "mibvrtr.mdf"
    Boolean                             ripSummary;
#line 130 "mibvrtr.mdf"
    Boolean                             ripTrigger;
}
#if ( USERIF & CLI )
__PACK__
#endif
VRouterProfile;
#line 224 "mibvrtr.mdf"

#endif /* (( ! defined( MIBVRTR_H ) ) && ( MDF_VROUTER == FYES )) */


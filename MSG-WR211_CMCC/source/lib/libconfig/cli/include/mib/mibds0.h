    /*
     * Notice: file generated by MIBMAKE from mibds0.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibds0.mdf
     */
#line 3 "mibds0.mdf"
/*
 * $Id: mibds0.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1996 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

    /*
     * Define the enumerated type DS0ChannelUsage and it's CLI lookup
     * tables.
     */
#line 29 "mibds0.mdf"

#if ! defined( MIBDS0_H )
# define MIBDS0_H

# include "mibgen.h"

# if ( USERIF & CLI )

extern const MibFieldEnumParams	ds0ChannelUsageParams;

# endif /* ( USERIF & CLI ) */


    /*
     * DS0ChannelUsage:
     *
     * Each DS0 on a Network Interface may be configured in any of the
     * following ways:
     *
     *  DS0_UNUSED_CHANNEL The channel is unused. Send the single idle code
     *                                  defined for this channel.
     *
     *  DS0_SWITCHED_CHANNEL This is a switched channel, which will be either
     *                                  robbed-bit or d-channel, depending on
     *                                  the higher level configuration.
     *
     *  DS0_CUT_THROUGH This is drop and insert source or destination. Note
     *                                  that this configuration is only valid
     *                                  if there are two T1 lines, and the
     *                                  channel is configured identically on
     *                                  both of them.
     *
     *  DS0_CLEAR_64 The channel is a clear-channel 64K circuit. It does not
     *                                  require any setup information.
     *
     *  DS0_PRI_D_CHANNEL The channel is used for ISDN D-Channel signaling,
     *                                  directed at the appropriate controller
     *                                  for the physical interface.
     *
     *  DS0_NFAS_PRIME_D The channel is used for the primary ISDN D-Channel in
     *                                  the NFAS configuration. This field is
     *                                  used to support D-channel back-up
     *                                  process.
     *
     *  DS0_NFAS_SEC_D The channel is used for the secondary ISDN D-Channel in
     *                                  the NFAS configuration. This field is
     *                                  used to support D-channel back-up
     *                                  process.
     *
     *  DS0_CAS_CHANNEL The channel is used for E1 channel associated
     *                                  signaling.
     *
     *  DS0_SPC_CHANNEL The channel provides an Australian SPC service.
     */

#if PLATFORM & ( MPORT | P50 | PDSL | P25 | P15 | TNT | M200 )

typedef enum DS0ChannelUsage {
#line 59 "mibds0.mdf"
    DS0_UNUSED_CHANNEL,
#line 63 "mibds0.mdf"
    DS0_SWITCHED_CHANNEL,
#line 67 "mibds0.mdf"
    DS0_CUT_THROUGH,
#line 73 "mibds0.mdf"
#if ( MDF_NAILED_CHANS == FYES )
    DS0_CLEAR_64,
#endif /* ( MDF_NAILED_CHANS == FYES ) */
#line 78 "mibds0.mdf"
    DS0_PRI_D_CHANNEL,
#line 82 "mibds0.mdf"
    DS0_NFAS_PRIME_D,
#line 87 "mibds0.mdf"
    DS0_NFAS_SEC_D,
#line 92 "mibds0.mdf"
    DS0_CAS_CHANNEL,
#line 96 "mibds0.mdf"
#if ( MDF_AUSTRALIAN_SPC == FYES )
    DS0_SPC_CHANNEL
#endif /* ( MDF_AUSTRALIAN_SPC == FYES ) */
} DS0ChannelUsage;

#endif /* PLATFORM & ( MPORT | P50 | PDSL | P25 | P15 | TNT | M200 ) */

#if PLATFORM & ( MPORT | P50 | PDSL | P25 | P15 | TNT | M200 )



static __inline__ Bool
validDS0ChannelUsage (int x)
{
    switch (x) {
#line 59 "mibds0.mdf"
    case DS0_UNUSED_CHANNEL:
#line 63 "mibds0.mdf"
    case DS0_SWITCHED_CHANNEL:
#line 67 "mibds0.mdf"
    case DS0_CUT_THROUGH:
#line 73 "mibds0.mdf"
#if ( MDF_NAILED_CHANS == FYES )
    case DS0_CLEAR_64:
#endif /* ( MDF_NAILED_CHANS == FYES ) */
#line 78 "mibds0.mdf"
    case DS0_PRI_D_CHANNEL:
#line 82 "mibds0.mdf"
    case DS0_NFAS_PRIME_D:
#line 87 "mibds0.mdf"
    case DS0_NFAS_SEC_D:
#line 92 "mibds0.mdf"
    case DS0_CAS_CHANNEL:
#line 96 "mibds0.mdf"
#if ( MDF_AUSTRALIAN_SPC == FYES )
    case DS0_SPC_CHANNEL:
#endif /* ( MDF_AUSTRALIAN_SPC == FYES ) */
        return TRUE;
    default:
        return FALSE;
    }
}

#endif /* PLATFORM & ( MPORT | P50 | PDSL | P25 | P15 | TNT | M200 ) */
#line 117 "mibds0.mdf"

#endif /* MIBDS0_H */


    /*
     * Notice: file generated by MIBMAKE from mibcmt.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibcmt.mdf
     */
#line 3 "mibcmt.mdf"
/*
 * $Id: mibcmt.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1996 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

    /*
     * Define the enumerated type CompressionType and it's CLI lookup
     * tables.
     */
#line 29 "mibcmt.mdf"

#if ! defined( MIBCMP_H )
#define MIBCMP_H

#include "mibgen.h"

#if ( USERIF & CLI )

extern const MibFieldEnumParams		callMgmtTypeParams;

#endif /* ( USERIF & CLI ) */


    /*
     * CallMgmtType:
     *
     * Defines the encapsulation protocols used.
     *
     *  CALL_MGMT_MPP This is the UTT Multiplexed Packet Protocol used when
     *                                  Pipeline communications with Pipeline.
     *                                  All features are available when this
     *                                  protocol is used.
     *
     *  CALL_MGMT_MP Standard MP (RFC 1717), used when communicating with a
     *                                  non-UTT box that supports MP. The
     *                                  ability to add and subtract bandwidth
     *                                  is not available with this protocol.
     *
     *  CALL_MGMT_PPP Standard PPP, used when communicating with a non-UTT
     *                                  box that supports PPP. The ability to
     *                                  add and subtract bandwidth is not
     *                                  available with this protocol.
     *
     *  CALL_MGMT_COMBINET Combinet bridge compatibility mode.
     *
     *  CALL_MGMT_SLIP An Async SLIP connection.
     *
     *  CALL_MGMT_CSLIP Compress SLIP connection using VJ TCP header
     *                                  compression.
     *
     *  CALL_MGMT_FRAME_RELAY Frame relay.
     *
     *  CALL_MGMT_FRAME_RELAY_CIR Frame relay circuit.
     *
     *  CALL_MGMT_X25PAD X.25/PAD on B channel.
     *
     *  CALL_MGMT_EURAW Eunet raw hdlc connection.
     *
     *  CALL_MGMT_EUUI Eunet UI frame (x.75-like) connection.
     *
     *  CALL_MGMT_TCP_RAW RAW TCP, no encapsulation between unit and caller.
     *
     *  CALL_MGMT_1356_X25 RFC1356 - Multiprotocol over X25
     *
     *  CALL_MGMT_ARA Appletalk Remote Access
     *
     *  CALL_MGMT_IMODEM IModem transparent connection
     *
     *  CALL_MGMT_T3POS X.25/T3POS - Transaction-oriented protocol over PAD.
     *
     *  CALL_MGMT_DTPT Pseudo-tunneling PPP for T-Online
     *
     *  CALL_MGMT_X32 X.25 dial-in connection.
     *
     *  CALL_MGMT_RLOGIN Rlogin session.
     *
     *  CALL_MGMT_TELNET Telnet session.
     *
     *  CALL_MGMT_ATM Asynchronous Transmission Mode.
     *
     *  CALL_MGMT_ATM_FR_CIR ATM to Frame Relay circuit.
     *
     *  CALL_MGMT_NONE None of the above.
     */
typedef enum CallMgmtType {
#line 56 "mibcmt.mdf"
#if ( MDF_MPP == FYES )
    CALL_MGMT_MPP = 0,
#endif /* ( MDF_MPP == FYES ) */
#line 62 "mibcmt.mdf"
#if ( MDF_MPP == FYES )
    CALL_MGMT_MP = 1,
#endif /* ( MDF_MPP == FYES ) */
#line 68 "mibcmt.mdf"
#if ( MDF_PPP == FYES )
    CALL_MGMT_PPP = 2,
#endif /* ( MDF_PPP == FYES ) */
#line 74 "mibcmt.mdf"
#if ( MDF_COMB == FYES )
    CALL_MGMT_COMBINET = 8,
#endif /* ( MDF_COMB == FYES ) */
#line 78 "mibcmt.mdf"
#if ( MDF_ASYNC == FYES )
    CALL_MGMT_SLIP = 3,
#endif /* ( MDF_ASYNC == FYES ) */
#line 82 "mibcmt.mdf"
#if ( MDF_ASYNC == FYES )
    CALL_MGMT_CSLIP = 4,
#endif /* ( MDF_ASYNC == FYES ) */
#line 86 "mibcmt.mdf"
#if ( MDF_FRAME_RELAY == FYES )
    CALL_MGMT_FRAME_RELAY = 5,
#endif /* ( MDF_FRAME_RELAY == FYES ) */
#line 90 "mibcmt.mdf"
#if ( MDF_FRAME_RELAY_NNI == FYES )
    CALL_MGMT_FRAME_RELAY_CIR = 9,
#endif /* ( MDF_FRAME_RELAY_NNI == FYES ) */
#line 94 "mibcmt.mdf"
#if ( MDF_X25PAD == FYES )
    CALL_MGMT_X25PAD = 10,
#endif /* ( MDF_X25PAD == FYES ) */
#line 98 "mibcmt.mdf"
#if ( MDF_EURAW == FYES )
    CALL_MGMT_EURAW = 11,
#endif /* ( MDF_EURAW == FYES ) */
#line 102 "mibcmt.mdf"
#if ( MDF_EUUI == FYES )
    CALL_MGMT_EUUI = 12,
#endif /* ( MDF_EUUI == FYES ) */
#line 106 "mibcmt.mdf"
#if ( MDF_TELNET == FYES ) || ( MDF_TCP_CLEAR == FYES )
    CALL_MGMT_TCP_RAW = 6,
#endif /* ( MDF_TELNET == FYES ) || ( MDF_TCP_CLEAR == FYES ) */
#line 110 "mibcmt.mdf"
#if ( MDF_IPOX25 == FYES )
    CALL_MGMT_1356_X25 = 13,
#endif /* ( MDF_IPOX25 == FYES ) */
#line 114 "mibcmt.mdf"
#if (MDF_ARAP == FYES)
    CALL_MGMT_ARA = 14,
#endif /* (MDF_ARAP == FYES) */
#line 118 "mibcmt.mdf"
#if (MDF_IMODEM == FYES)
    CALL_MGMT_IMODEM = 2,
#endif /* (MDF_IMODEM == FYES) */
#line 122 "mibcmt.mdf"
#if ( MDF_X25_T3POS == FYES )
    CALL_MGMT_T3POS = 16,
#endif /* ( MDF_X25_T3POS == FYES ) */
#line 126 "mibcmt.mdf"
#if (MDF_DTPT == FYES )
    CALL_MGMT_DTPT = 7,
#endif /* (MDF_DTPT == FYES ) */
#line 130 "mibcmt.mdf"
#if ( MDF_X25B == FYES )
    CALL_MGMT_X32 = 17,
#endif /* ( MDF_X25B == FYES ) */
#line 134 "mibcmt.mdf"
#if ( MDF_RLOGIN == FYES )
    CALL_MGMT_RLOGIN = 18,
#endif /* ( MDF_RLOGIN == FYES ) */
#line 139 "mibcmt.mdf"
#if ( MDF_TELNET == FYES )
    CALL_MGMT_TELNET = 19,
#endif /* ( MDF_TELNET == FYES ) */
#line 144 "mibcmt.mdf"
#if ( MDF_ATM == FYES )
    CALL_MGMT_ATM = 20,
#endif /* ( MDF_ATM == FYES ) */
#line 148 "mibcmt.mdf"
#if ( MDF_ATM == FYES )
    CALL_MGMT_ATM_FR_CIR = 21,
#endif /* ( MDF_ATM == FYES ) */
#line 152 "mibcmt.mdf"
    CALL_MGMT_NONE = 22
} CallMgmtType;


static __inline__ Bool
validCallMgmtType (int x)
{
    switch (x) {
#line 56 "mibcmt.mdf"
#if ( MDF_MPP == FYES )
    case CALL_MGMT_MPP:
#endif /* ( MDF_MPP == FYES ) */
#line 62 "mibcmt.mdf"
#if ( MDF_MPP == FYES )
    case CALL_MGMT_MP:
#endif /* ( MDF_MPP == FYES ) */
#line 68 "mibcmt.mdf"
#if ( MDF_PPP == FYES )
    case CALL_MGMT_PPP:
#endif /* ( MDF_PPP == FYES ) */
#line 74 "mibcmt.mdf"
#if ( MDF_COMB == FYES )
    case CALL_MGMT_COMBINET:
#endif /* ( MDF_COMB == FYES ) */
#line 78 "mibcmt.mdf"
#if ( MDF_ASYNC == FYES )
    case CALL_MGMT_SLIP:
#endif /* ( MDF_ASYNC == FYES ) */
#line 82 "mibcmt.mdf"
#if ( MDF_ASYNC == FYES )
    case CALL_MGMT_CSLIP:
#endif /* ( MDF_ASYNC == FYES ) */
#line 86 "mibcmt.mdf"
#if ( MDF_FRAME_RELAY == FYES )
    case CALL_MGMT_FRAME_RELAY:
#endif /* ( MDF_FRAME_RELAY == FYES ) */
#line 90 "mibcmt.mdf"
#if ( MDF_FRAME_RELAY_NNI == FYES )
    case CALL_MGMT_FRAME_RELAY_CIR:
#endif /* ( MDF_FRAME_RELAY_NNI == FYES ) */
#line 94 "mibcmt.mdf"
#if ( MDF_X25PAD == FYES )
    case CALL_MGMT_X25PAD:
#endif /* ( MDF_X25PAD == FYES ) */
#line 98 "mibcmt.mdf"
#if ( MDF_EURAW == FYES )
    case CALL_MGMT_EURAW:
#endif /* ( MDF_EURAW == FYES ) */
#line 102 "mibcmt.mdf"
#if ( MDF_EUUI == FYES )
    case CALL_MGMT_EUUI:
#endif /* ( MDF_EUUI == FYES ) */
#line 106 "mibcmt.mdf"
#if ( MDF_TELNET == FYES ) || ( MDF_TCP_CLEAR == FYES )
    case CALL_MGMT_TCP_RAW:
#endif /* ( MDF_TELNET == FYES ) || ( MDF_TCP_CLEAR == FYES ) */
#line 110 "mibcmt.mdf"
#if ( MDF_IPOX25 == FYES )
    case CALL_MGMT_1356_X25:
#endif /* ( MDF_IPOX25 == FYES ) */
#line 114 "mibcmt.mdf"
#if (MDF_ARAP == FYES)
    case CALL_MGMT_ARA:
#endif /* (MDF_ARAP == FYES) */
#line 118 "mibcmt.mdf"
#if (MDF_IMODEM == FYES)
    case CALL_MGMT_IMODEM:
#endif /* (MDF_IMODEM == FYES) */
#line 122 "mibcmt.mdf"
#if ( MDF_X25_T3POS == FYES )
    case CALL_MGMT_T3POS:
#endif /* ( MDF_X25_T3POS == FYES ) */
#line 126 "mibcmt.mdf"
#if (MDF_DTPT == FYES )
    case CALL_MGMT_DTPT:
#endif /* (MDF_DTPT == FYES ) */
#line 130 "mibcmt.mdf"
#if ( MDF_X25B == FYES )
    case CALL_MGMT_X32:
#endif /* ( MDF_X25B == FYES ) */
#line 134 "mibcmt.mdf"
#if ( MDF_RLOGIN == FYES )
    case CALL_MGMT_RLOGIN:
#endif /* ( MDF_RLOGIN == FYES ) */
#line 139 "mibcmt.mdf"
#if ( MDF_TELNET == FYES )
    case CALL_MGMT_TELNET:
#endif /* ( MDF_TELNET == FYES ) */
#line 144 "mibcmt.mdf"
#if ( MDF_ATM == FYES )
    case CALL_MGMT_ATM:
#endif /* ( MDF_ATM == FYES ) */
#line 148 "mibcmt.mdf"
#if ( MDF_ATM == FYES )
    case CALL_MGMT_ATM_FR_CIR:
#endif /* ( MDF_ATM == FYES ) */
#line 152 "mibcmt.mdf"
    case CALL_MGMT_NONE:
        return TRUE;
    default:
        return FALSE;
    }
}
#line 173 "mibcmt.mdf"

#endif /* MIBCMP_H */


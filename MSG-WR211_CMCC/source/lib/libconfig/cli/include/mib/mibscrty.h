    /*
     * Notice: file generated by MIBMAKE from mibscrty.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibscrty.mdf
     */
#line 2 "mibscrty.mdf"
/*
 * $Id: mibscrty.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1995 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 24 "mibscrty.mdf"

#if ! defined( MIBSECURITY_H )
#define MIBSECURITY_H

    /* This file contains the internal representation of the security profile
     * (MIB_PROF_SECURITY). The name of this profile is stored in the global
     * variable mibProfScrty.
     */

extern const char* const		mibProfScrty;


    /*
     * SecurityProfile:
     *
     * Security Profile:
     *
     *  hostName Profile name.
     *
     *  password Password to access the security levels defined by this
     *                                  profile.
     *
     *  operations TRUE = able to do things other than look.
     *
     *  editSecurity TRUE = able to edit the security profiles.
     *
     *  editSystem TRUE = able to edit the system profiles.
     *
     *  editLine TRUE = able to edit the line profile.
     *
     *  editOwnPort TRUE = able to edit port associated port profile (for
     *                                  remote terminal).
     *
     *  editAllPort TRUE = able to edit all port profiles.
     *
     *  editCurCall TRUE = able to edit the current call profile.
     *
     *  editOwnCall TRUE = able to edit port associated call profiles (for
     *                                  remote terminal).
     *
     *  editComCall TRUE = able to edit the common call profiles (for remote
     *                                  terminal).
     *
     *  editAllCall TRUE = able to edit all call profiles.
     *
     *  sysDiag TRUE = able to perform system diagnostics.
     *
     *  ownPortDiag TRUE = able to perform port associated port diagnostics
     *                                  (for remote terminal).
     *
     *  allPortDiag TRUE = able to perform port diagnostics for all ports.
     *
     *  download TRUE = able to download configuration.
     *
     *  upload TRUE = able to upload configuration.
     *
     *  fieldService TRUE = able to perform field service.
     *
     *  useTACACSPlus Use TACACS+ to authenticate security level changes
     */
typedef struct securityProfile {
#line 57 "mibscrty.mdf"
    char                                hostName[ MAX_HOST_NAME_LENGTH + 1 ];
    Boolean                             active; 
#line 61 "mibscrty.mdf"
    char                                password[ MAX_PASSWORD_LENGTH + 1 ];
#line 65 "mibscrty.mdf"
    Boolean                             operations;
#line 69 "mibscrty.mdf"
    Boolean                             editSecurity;
#line 73 "mibscrty.mdf"
    Boolean                             editSystem;
#line 77 "mibscrty.mdf"
    Boolean                             editLine;
#line 81 "mibscrty.mdf"
    Boolean                             editOwnPort;
#line 86 "mibscrty.mdf"
    Boolean                             editAllPort;
#line 90 "mibscrty.mdf"
    Boolean                             editCurCall;
#line 94 "mibscrty.mdf"
    Boolean                             editOwnCall;
#line 99 "mibscrty.mdf"
    Boolean                             editComCall;
#line 103 "mibscrty.mdf"
    Boolean                             editAllCall;
#line 107 "mibscrty.mdf"
    Boolean                             sysDiag;
#line 111 "mibscrty.mdf"
    Boolean                             ownPortDiag;
#line 116 "mibscrty.mdf"
    Boolean                             allPortDiag;
#line 120 "mibscrty.mdf"
    Boolean                             download;
#line 124 "mibscrty.mdf"
    Boolean                             upload;
#line 128 "mibscrty.mdf"
    Boolean                             fieldService;
#line 132 "mibscrty.mdf"
    Boolean                             useTACACSPlus;
}
#if ( USERIF & CLI )
__PACK__
#endif
SecurityProfile;
#line 158 "mibscrty.mdf"
//add by jxy8@2003-12-26 for WebUserRight
#if ( WEB_SERVER == FYES )

#define MAX_USER_NAME_LEN    		MAX_HOST_NAME_LENGTH
#define MAX_GROUP_NAME_LEN   		MAX_PROFILE_NAME_LENGTH
#define MAX_URL_NAME_LEN     		70
#define MAX_RELATIVEURL_NAME_LEN	30	    //added by dhyu@090611
#define MAX_OUTPUT_NAME_LEN		30	    //added by dhyu@090611

typedef enum tWebColor{
        blue,
        green = 1
}webColorStyle;

typedef struct securityUserProfile {
    char		hostName[ MAX_HOST_NAME_LENGTH + 1 ];   
    Boolean             active; 
    char               	password[ MAX_PASSWORD_LENGTH + 1 ];
    char               	group[MAX_GROUP_NAME_LEN+1];
    Uint8             	prot;
}SecurityUserProfile;

#define MAX_WEB_CLIENTS	3

typedef struct securityGroupProfile {
    char                name[ MAX_GROUP_NAME_LEN + 1 ]; //group name
    Boolean             active; 
    Uint8               priv;      
    Uint8               prot;
}SecurityGroupProfile;

typedef struct securityUrlProfile {
    char                name[ MAX_URL_NAME_LEN + 1 ]; //url
    Boolean             active; 
    char                group[ MAX_GROUP_NAME_LEN + 1 ];
    Uint8               secure;  
}SecurityUrlProfile;

/********************************************************************************
 *expects: control the advertise if display on the underside of the web
 *date:	   2009-06-03
 *author:  jfgu
 * *****************************************************************************/
typedef struct advertiseProfile {
    Boolean	    enable;		//switch
    IpAddress	    checkIp;		//the ad's server IP
    Uint32	    icmpTimeOut;	//icmp response time
} AdvertiseProfile;

/********************************************************************************
 *expects: control the button "join to startmenu" on the web
 *date:    2009-06-11
 *author:  dhyu@090611
 * *****************************************************************************/
typedef struct buttonProfile {
   char		    name[MAX_RELATIVEURL_NAME_LEN + 1]; //instance name 
   char		    url[MAX_RELATIVEURL_NAME_LEN + 1]; //relative url	
   char		    output[MAX_OUTPUT_NAME_LEN + 1];   //web's output
} JoinButtonProfile;

typedef struct webProfile {
   char                                name[ MAX_PROFILE_NAME_LENGTH + 1 ];
   Boolean                             active; 

   SecurityUserProfile  UserInfo[MAX_SECURITY_WEB_USERS];
   SecurityGroupProfile GroupInfo[MAX_SECURITY_WEB_GROUPS];
   SecurityUrlProfile   UrlInfo[MAX_SECURITY_WEB_URLS];
   Uint8                method;          	//web access method
   Uint32               IdleTimeout;     	// idle timeout to logout
   Uint16               MaxWebConns;     	//max number of connections
   Uint32               refreshTimeout;  	// auto refresh peroid in asp page
   Uint16               port;            	//web server listen port
   Boolean              InternetAccess;  	//enable remote control from internet
   #if (PDB == FYES)
   Uint32              bIsPdbChk; 		//add by jyshen 060807
   Uint32			pdbCheckDay;				//add by jyshen 060817
   Uint32			pdbCheckTime;				//add by jyshen 060817
   #endif		//PDB				
   Uint16               defaultPageIndex;    	//web server default page index
   webColorStyle	colorstyle;
/*
     *  webAccessHost The IP address of a http client which has access.
     *
     *  webAccessMask The IP netmask of a http client which has access.
     *
*/
   IpAddress		webAccessHost[MAX_WEB_CLIENTS];
   IpAddress		webAccessMask[MAX_WEB_CLIENTS];
}WebProfile;
#endif
//add endjxy8
#endif /* MIBSECURITY_H */


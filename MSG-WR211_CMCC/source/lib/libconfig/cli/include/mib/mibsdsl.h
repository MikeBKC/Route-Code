    /*
     * Notice: file generated by MIBMAKE from mibsdsl.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibsdsl.mdf
     */
#line 3 "mibsdsl.mdf"
/*
 * $Id: mibsdsl.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1996 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 25 "mibsdsl.mdf"
#if ( ! defined( MIBSDSL_H ))
# define MIBSDSL_H

        /* THIS FILE DESCRIBES THE SDSL STATUS AND STATISTICS PROFILE.
	   CHANGES TO THIS FILE DIRECTLY AFFECT THE USER INTERFACE.  BE
	   SURE YOU KNOW WHAT YOU ARE DOING BEFORE YOU START MUCKING
	   AROUND IN THE CODE.
	 */
# include "mibaddr.h"

/*
 * Our parameter table is made external as the profile is used
 * within other profiles.
 */
extern const MibFieldComplexParams      sdslStatusParams;
extern const MibFieldComplexParams      sdslStatisticParams;

/* BER Test states */
typedef enum{
    BT_BERT_ACTIVE = 1,
	BT_BERT_DEACTIVE,
	BT_BERT_START_UP,
	BT_BERT_WAITING,
	BT_BERT_PEND_ACTIVE,
	BT_BERT_LOS,
	BT_BERT_ENUM_SIZE
	}sdslBertStates;


    /*
     * PortUpTime:
     *
     *
     *  days Number of days the port has been up.
     *
     *  hours Number of hours, in 24 hour format, the port has been up.
     *
     *  minutes Number of minutes the port has been up.
     */
typedef struct portUpTime {
#line 288 "mibsdsl.mdf"
    Byte                                days;
#line 292 "mibsdsl.mdf"
    Byte                                hours;
#line 296 "mibsdsl.mdf"
    Byte                                minutes;
}
#if ( USERIF & CLI )
__PACK__
#endif
PortUpTime;

    /*
     * MibProfSdslStatus:
     *
     * Sdsl status parameters.
     *
     *  ifStatusIfGrpIndex Interface groups index assigned to this physical
     *                                  port.
     *
     *  ifStatusUnitType Unit types defines if the node is operating Central
     *                                  Office or Customer Premise equipment
     *                                  software.
     *
     *  devLineState Displays the current interface state. config -- interface
     *                                  being configured. deactivate --
     *                                  interface is imposing deactivation.
     *                                  deactivate-lost -- interface is waiting
     *                                  for the LOS Timer to expire. inactive
     *                                  -- interface is starting up. activating
     *                                  -- interface is waiting for remote to
     *                                  start up. active-rx -- interface is
     *                                  waiting for remote side to start 4
     *                                  level transmission. port-up --
     *                                  interface is connected to remote node
     *                                  and data can be transfered.
     *                                  portup-pending-deactive -- interface
     *                                  experienced an LOS or noise margin
     *                                  error.
     *
     *  ifStatusUpStreamRate Current upstream interface rate.
     *
     *  ifStatusDownStreamRate Current down stream interface rate.
     *
     *  ifStatusMajorFirmwareVer Firmware major version ID.
     *
     *  ifStatusMinorFirmwareVer Firmwares minor version ID.
     *
     *  ifStatusHardwareVer Hardware chip version.
     */
typedef struct mibProfSdslStatus {
#line 309 "mibsdsl.mdf"
    int                                 ifStatusIfGrpIndex;
#line 314 "mibsdsl.mdf"
    int                                 ifStatusUnitType;
#line 320 "mibsdsl.mdf"
    int                                 devLineState;
#line 334 "mibsdsl.mdf"
    unsigned long                       ifStatusUpStreamRate;
#line 339 "mibsdsl.mdf"
    unsigned long                       ifStatusDownStreamRate;
#line 344 "mibsdsl.mdf"
    int                                 ifStatusMajorFirmwareVer;
#line 349 "mibsdsl.mdf"
    int                                 ifStatusMinorFirmwareVer;
#line 354 "mibsdsl.mdf"
    int                                 ifStatusHardwareVer;
}
#if ( USERIF & CLI )
__PACK__
#endif
MibProfSdslStatus;

    /*
     * MibProfSdslStatistic:
     *
     * Sdsl statistical parameters.
     *
     *  ifStatIfUpTimer Time period this line has been in the Up state.
     *
     *  ifStatRxSigPresent State if the receive signal is present or not.
     *
     *  ifStatLineQuality While the port is in the up state, this parameter
     *                                  displays the line quality.
     *
     *  ifStatIfUpDwnCntr Interface Up Down counter value displays the number
     *                                  of times the interface trasitions from
     *                                  a down to up state.
     *
     *  ifStatBtSelfTest Hardware/firmware self test results.
     *
     *  ifStatFarEndSigAtten Receive signal attenuation.
     *
     *  ifStatFirmWareState Current firmware state.
     *
     *  ifStatHdlcRxCrcErrCnt While the port is in the up state, this parameter
     *                                  displays the number of HDLC CRC errors
     *                                  associated with this channel. If there
     *                                  are too many errors, then this channel
     *                                  lost communications with the remote
     *                                  node and is restarted.
     *
     *  ifStatBertTimer If the CPE and COE units are physically connected. When
     *                                  this time period expires the BER Test
     *                                  is stopped.
     *
     *  ifStatBertEna To enable the SDSL BER test set this parameter to yes.
     *
     *  ifStatBertOpState State of the BER Test. If the line is not in the port
     *                                  up state, then local AFE loopback is
     *                                  enabled and the BER test is started.
     *
     *  ifStatBertErrorCntr Number of errors encountered while the BER test has
     *                                  run.
     */
typedef struct mibProfSdslStatistic {
#line 368 "mibsdsl.mdf"
    PortUpTime                          ifStatIfUpTimer;
#line 373 "mibsdsl.mdf"
    int                                 ifStatRxSigPresent;
#line 378 "mibsdsl.mdf"
    char                                ifStatLineQuality;
#line 384 "mibsdsl.mdf"
    int                                 ifStatIfUpDwnCntr;
#line 391 "mibsdsl.mdf"
    int                                 ifStatBtSelfTest;
#line 396 "mibsdsl.mdf"
    char                                ifStatFarEndSigAtten;
#line 401 "mibsdsl.mdf"
    int                                 ifStatFirmWareState;
#line 406 "mibsdsl.mdf"
    unsigned int                        ifStatHdlcRxCrcErrCnt;
#line 414 "mibsdsl.mdf"
    int                                 ifStatBertTimer;
#line 419 "mibsdsl.mdf"
    Boolean                             ifStatBertEna;
#line 423 "mibsdsl.mdf"
    int                                 ifStatBertOpState;
#line 429 "mibsdsl.mdf"
    unsigned int                        ifStatBertErrorCntr;
}
#if ( USERIF & CLI )
__PACK__
#endif
MibProfSdslStatistic;
#line 477 "mibsdsl.mdf"

# endif /* (( ! defined( MIBSDSL_H ) ) && ( PLATFORM & (PDSL | TNT))) */


    /*
     * Notice: file generated by MIBMAKE from mibinatlk.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibinatlk.mdf
     */
#line 3 "mibinatlk.mdf"
/*
 * $Id: mibinatlk.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1996 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 32 "mibinatlk.mdf"



#if (( ! defined( MIBINATLK_H ) ) && ( MDF_APPLE_ROUTE == FYES ))
#define MIBINATLK_H

#include "mibgen.h"
#include "mibglob.h"
#include "mibsct.h"
#include "mibslot.h"
    /*
     * How to build the factory instance of this profile.
     */
extern ConstPtr
mibFactoryAtalkOptions( MibProfileType	mibType,
		      Uint32		info );

    /*
     * Our parameter table is made external as the profile is used
     * within other profiles.
     */
extern const MibFieldComplexParams	atalkOptionsParams;


    /*
     * AtalkPeerMode:
     *
     * AppleTalk Router Peer Mode:
     *
     *  ATALK_PEER_ROUTER Route to this connection.
     *
     *  ATALK_PEER_DIALIN No routing, use proxy aarp.
     */
typedef enum AtalkPeerMode {
#line 75 "mibinatlk.mdf"
    ATALK_PEER_ROUTER,
#line 78 "mibinatlk.mdf"
    ATALK_PEER_DIALIN
} AtalkPeerMode;


static __inline__ Bool
validAtalkPeerMode (int x)
{
    switch (x) {
#line 75 "mibinatlk.mdf"
    case ATALK_PEER_ROUTER:
#line 78 "mibinatlk.mdf"
    case ATALK_PEER_DIALIN:
        return TRUE;
    default:
        return FALSE;
    }
}

    /*
     * AtalkOptions:
     *
     * AppleTalk protocol configuration options.
     *
     *  pppAtalkNcp Enable/disable AppleTalk routine for this connection.
     *
     *  staticZoneName The static Zone Name to show for this route.
     *
     *  staticNetStart The Net Number start value for this route.
     *
     *  staticNetEnd The Net Number end value for this route.
     *
     *  atalkPeerMode Enable/disable full routing between peer or using proxy
     *                                  AARP to assign a network address.
     */
typedef struct atalkOptions {
#line 102 "mibinatlk.mdf"
    Boolean                             pppAtalkNcp;
#line 107 "mibinatlk.mdf"
    ZoneNameType                        staticZoneName;
#line 112 "mibinatlk.mdf"
    unsigned short                      staticNetStart;
#line 117 "mibinatlk.mdf"
    unsigned short                      staticNetEnd;
#line 122 "mibinatlk.mdf"
    AtalkPeerMode                       atalkPeerMode;
}
#if ( USERIF & CLI )
__PACK__
#endif
AtalkOptions;
#line 190 "mibinatlk.mdf"

#endif /* (( ! defined( MIBINATLK_H ) ) && ( MDF_APPLE_ROUTE == FYES )) */


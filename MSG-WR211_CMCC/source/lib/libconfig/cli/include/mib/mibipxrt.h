    /*
     * Notice: file generated by MIBMAKE from mibipxrt.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibipxrt.mdf
     */
#line 2 "mibipxrt.mdf"
/*
 * $Id: mibipxrt.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1995 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 24 "mibipxrt.mdf"

#if ! defined( MIBIPXROUTE_H )
#define MIBIPXROUTE_H

    /* This file contains the internal representation of the IPX route profile
     * (MIB_PROF_IPX_ROUTE). The name of this profile is stored in the global
     * variable mibProfIpxrt.
     */

extern const char* const		mibProfIpxRoute;

extern ConstPtr
mibFactoryIpxRouteProfile( MibProfileType  mibType,
                                ConstPtr          mibIndex,
                                Int               mibIndexLen );


#define MIB_ROUTE_INDEX_FIELD           1

#define MIB_DEFAULT_ROUTE_INDEX         "default"

#define MIB_ROUTE_TEMPLATE_DEFAULT      1


#if ( MDF_IPX_ROUTE == FYES )
    /*
     *	This is the maximum length of the server name in the route profile.
     *  It must be the same as ipxsap.h:IPX_SAP_NAME_LENGTH.
     */
#define MAX_IPX_ROUTE_NAME_LENGTH	20
#define MAX_HOST_NAME_LENGTH		31

#define LANPROF_IPX_NODE_LENGTH		6
#endif /* ( MDF_IPX_ROUTE == FYES ) */


    /*
     * IpxRouteProfile:
     *
     * An IpxRouteProfile describes a static IPX Route to an IPX server. It
     * contains enough information to make static records in both the Route and
     * Service databases. By doing a single profile type, we don't require the
     * user to configure routes & services separately. A static route record
     * with an empty name will be equivalent to a route-only static route.
     *
     *  name SAP name of the server.
     *
     *  serverType SAP type.
     *
     *  destNetwork The IPX network number of the destination network in 4
     *                                  bytes.
     *
     *  serverNode The node address of the server. For NetWare servers 3.0 and
     *                                  beyond, this is 1.
     *
     *  serverSocket The advertising socket number for the server.
     *
     *  hops The distance in hops to the network.
     *
     *  ticks The distance in ticks to the network.
     *
     *  profileNumber The profile through which we reach the net.
     *
     *  ipxRouteName The connection through which we reach the net.
     *
     *  activeRoute TRUE if this route is active.Inactive routes are not placed
     *                                  in the routing tables.
     */

#if ( MDF_IPX_ROUTE == FYES )

typedef struct ipxRouteProfile {
#line 108 "mibipxrt.mdf"
    char                                name[ MAX_IPX_ROUTE_NAME_LENGTH + 1 ];
#line 112 "mibipxrt.mdf"
    Word                                serverType;
#line 116 "mibipxrt.mdf"
    LongWord                            destNetwork;
#line 120 "mibipxrt.mdf"
    Byte                                serverNode[ LANPROF_IPX_NODE_LENGTH ];
#line 125 "mibipxrt.mdf"
    Word                                serverSocket;
#line 129 "mibipxrt.mdf"
    Word                                hops;
#line 133 "mibipxrt.mdf"
    Word                                ticks;
#line 137 "mibipxrt.mdf"
#if ( ! ( PLATFORM & TNT ))
    Word                                profileNumber;
#endif /* ( ! ( PLATFORM & TNT )) */
#line 142 "mibipxrt.mdf"
#if ( PLATFORM & TNT )
    char                                ipxRouteName[ MAX_HOST_NAME_LENGTH + 1 ];
#endif /* ( PLATFORM & TNT ) */
#line 147 "mibipxrt.mdf"
    Boolean                             activeRoute;
}
#if ( USERIF & CLI )
__PACK__
#endif
IpxRouteProfile;

#endif /* ( MDF_IPX_ROUTE == FYES ) */
#line 202 "mibipxrt.mdf"

#endif /* MIBIPXROUTE_H */


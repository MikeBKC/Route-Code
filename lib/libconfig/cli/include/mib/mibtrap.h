    /*
     * Notice: file generated by MIBMAKE from mibtrap.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibtrap.mdf
     */
#line 2 "mibtrap.mdf"
/*
 * $Id: mibtrap.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1995 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 24 "mibtrap.mdf"

#if ! defined( MIBTRAP_H )
# define MIBTRAP_H

    /* This file contains the internal representation of the trap profile
     * (MIB_PROF_TRAP). The name of this profile is stored in the global
     * variable mibProfTrap.
     */

extern const char* const		mibProfTrap;

extern ConstPtr
mibFactoryTrapProfile( MibProfileType	mibType,
		       ConstPtr		mibIndex,
		       Int		mibIndexLen );

    /*
     * The field number used to index this profile
     */
# define MIB_PROF_TRAP_INDEX	1


    /*
     * TrapProfile:
     *
     * A TrapProfile contains the information required by the SNMP agent to
     * generate traps.
     *
     *  hostName The name of the host to send traps to. When DNS or YP/NIS is
     *                                  supported this name will be used to
     *                                  look up the LAN address when
     *                                  hostAddress is 0.
     *
     *  communityName The community name associated with the SNMP PDU.
     *
     *  hostAddress The LAN address of the named host. If 0 the address will be
     *                                  looked up via DNS or YP/NIS when
     *                                  supported.
     *
     *  alarmEnabled TRUE if alarm class traps are to be sent to the identified
     *                                  host.
     *
     *  securityEnabled TRUE if security class traps are to be sent to the
     *                                  identified host.
     *
     *  portEnabled TRUE if port class traps are to be sent to the identified
     *                                  host.
     *
     *  slotEnabled TRUE if slot class traps are to be sent to the identified
     *                                  host.
     *
     *  enableColdStart TRUE if cold start trap is enabled.
     *
     *  enableWarmStart TRUE if warm start trap is enabled.
     *
     *  enableLinkDown TRUE if link down trap is enabled.
     *
     *  enableLinkUp TRUE if link up trap is enabled.
     *
     *  enableUTT TRUE if UTT trap is enabled.
     *
     *  enableConsole TRUE if console trap is enabled.
     *
     *  enableUseExceeded TRUE if use exceeded trap is enabled.
     *
     *  enablePassword TRUE if Telnet password trap is enabled.
     *
     *  enableFRLinkUp TRUE if FR link up trap is enabled.
     *
     *  enableFRLinkDown TRUE if FR Link Down trap is enabled.
     *
     *  enableEventOverwrite TRUE if event Overwrite trap is enabled.
     *
     *  enableRadiusChange TRUE if radius change trap is enabled.
     *
     *  enableMcastMonitor TRUE if multicast monitor trap is enabled.
     *
     *  enableLanModem TRUE if lan modem trap is enabled.
     *
     *  enableDirdo TRUE if DIRDO trap is enabled.
     *
     *  enableSlotProfileChange TRUE if slot profile change trap is enabled.
     *
     *  enablePowerSupply TRUE if power supply changed trap is enabled.
     *
     *  enableMultiShelf TRUE if multi-shelf controller state trap is enabled.
     *
     *  enableAuthentication TRUE if SNMP authentication trap is enabled.
     *
     *  enableSysClockDrifted TRUE if system clock drifted trap is enabled.
     */
typedef struct st_trapProfile {
#line 71 "mibtrap.mdf"
    char                                hostName[ MAX_HOST_NAME_LENGTH + 1 ];
    Boolean                             active;
#line 77 "mibtrap.mdf"
    char                                communityName[ MAX_COMM_NAME_LENGTH + 1 ];
#line 81 "mibtrap.mdf"
#if ( MDF_IP == FYES )
    IpAddress                           hostAddress;
#endif /* ( MDF_IP == FYES ) */
#line 87 "mibtrap.mdf"
    Boolean                             alarmEnabled;
#line 91 "mibtrap.mdf"
    Boolean                             securityEnabled;
#line 95 "mibtrap.mdf"
    Boolean                             portEnabled;
#line 99 "mibtrap.mdf"
#if ( Q_TNT )
    Boolean                             slotEnabled;
#endif /* ( Q_TNT ) */
#line 104 "mibtrap.mdf"
    Boolean                             enableColdStart;
#line 108 "mibtrap.mdf"
    Boolean                             enableWarmStart;
#line 112 "mibtrap.mdf"
    Boolean                             enableLinkDown;
#line 116 "mibtrap.mdf"
    Boolean                             enableLinkUp;
#line 120 "mibtrap.mdf"
    Boolean                             enableUTT;
#line 124 "mibtrap.mdf"
    Boolean                             enableConsole;
#line 128 "mibtrap.mdf"
    Boolean                             enableUseExceeded;
#line 132 "mibtrap.mdf"
    Boolean                             enablePassword;
#line 136 "mibtrap.mdf"
    Boolean                             enableFRLinkUp;
#line 140 "mibtrap.mdf"
    Boolean                             enableFRLinkDown;
#line 144 "mibtrap.mdf"
    Boolean                             enableEventOverwrite;
#line 148 "mibtrap.mdf"
    Boolean                             enableRadiusChange;
#line 152 "mibtrap.mdf"
    Boolean                             enableMcastMonitor;
#line 156 "mibtrap.mdf"
    Boolean                             enableLanModem;
#line 160 "mibtrap.mdf"
    Boolean                             enableDirdo;
#line 164 "mibtrap.mdf"
    Boolean                             enableSlotProfileChange;
#line 168 "mibtrap.mdf"
    Boolean                             enablePowerSupply;
#line 172 "mibtrap.mdf"
    Boolean                             enableMultiShelf;
#line 176 "mibtrap.mdf"
    Boolean                             enableAuthentication;
#line 180 "mibtrap.mdf"
#if ( ( MDF_SNTP == FYES ) && Q_TNT )
    Boolean                             enableSysClockDrifted;
#endif /* ( ( MDF_SNTP == FYES ) && Q_TNT ) */
}
#if ( USERIF & CLI )
__PACK__
#endif
TrapProfile;
#line 257 "mibtrap.mdf"

# endif /* MIBTRAP_H */


    /*
     * Notice: file generated by MIBMAKE from mibtssec.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibtssec.mdf
     */
#line 3 "mibtssec.mdf"
/*
 * $Id: mibtssec.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $($Date: 2011/08/17 11:11:56 $ $Id: mibtssec.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $)
 *
 *      Copyright (c) 1996 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

    /*
     * Define the enumerated type TsSecureMode and it's CLI lookup
     * tables.
     */
#line 29 "mibtssec.mdf"

#if ! defined( MIBTSSEC_H )
#define MIBTSSEC_H

#include "mibgen.h"

#if ( USERIF & CLI )

extern const MibFieldEnumParams	tsSecureModeParams;

#endif /* ( USERIF & CLI ) */


    /*
     * TsSecureMode:
     *
     * When using the terminal server and LAN modems the system manager can
     * select the level of security in use. The options are:
     *
     *  TS_SECURE_NONE Passwords or usernames are not used.
     *
     *  TS_SECURE_PART Passwords and/or usernames are prompted for in command
     *                                  mode, but not in menu mode. If user
     *                                  toggles between modes, the password
     *                                  login will be required upon every entry
     *                                  to command mode.
     *
     *  TS_SECURE_FULL Password and/or login are required upon initial login,
     *                                  no matter what the mode.
     *
     *  TS_SECURE_COUNT
     */
typedef enum TsSecureMode {
#line 57 "mibtssec.mdf"
    TS_SECURE_NONE,
#line 60 "mibtssec.mdf"
    TS_SECURE_PART,
#line 65 "mibtssec.mdf"
    TS_SECURE_FULL,
#line 69 "mibtssec.mdf"
    TS_SECURE_COUNT
} TsSecureMode;


static __inline__ Bool
validTsSecureMode (int x)
{
    switch (x) {
#line 57 "mibtssec.mdf"
    case TS_SECURE_NONE:
#line 60 "mibtssec.mdf"
    case TS_SECURE_PART:
#line 65 "mibtssec.mdf"
    case TS_SECURE_FULL:
#line 69 "mibtssec.mdf"
    case TS_SECURE_COUNT:
        return TRUE;
    default:
        return FALSE;
    }
}
#line 89 "mibtssec.mdf"

#endif /* MIBTSSEC_H */


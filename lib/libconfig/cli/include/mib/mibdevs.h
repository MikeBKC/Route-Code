    /*
     * Notice: file generated by MIBMAKE from mibdevs.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibdevs.mdf
     */
#line 3 "mibdevs.mdf"
/*
 * $Id: mibdevs.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *	Copyright (c) 1996 UTT Technologies, Inc.
 *	All rights reserved.
 *	Use of copyright notice does not imply publication.
 *
 *
 *			CONFIDENTIAL INFORMATION
 *			------------------------
 *	This Document contains Confidential Information or Trade Secrets,
 *	or both, which are the property of UTT Technologies, Inc.
 *	This document may not be copied, reproduced, reduced to any
 *	electronic medium or machine readable form or otherwise duplicated
 *	and the information herein may not be used, disseminated or
 *	otherwise disclosed, except with the prior written consent of
 *	 UTT Technologies, Inc.
 */

    /*
     * Profile contains TNT device state info.  This is a non-persistant
     * profile managed by the tnt shelf controller for all devices.
     */
#line 29 "mibdevs.mdf"

#if ! defined( MIBDEVS_H )
#define MIBDEVS_H

    /*
     * The name of the device state profile is stored in this global
     * data variable.
     */
extern const char* const		mibProfDevState;

    /*
     * The field number used to index this profile
     */
#define MIB_PROF_DEV_STATE_INDEX	1


    /*
     * DevOperState:
     *
     * Values to indicate the current state of a device. The desired state may
     * differ from the current state, e.g. when a device is powering up or when
     * the desired state is changed from up to down. This value can not be
     * changed by the user.
     *
     *  DEV_OPER_DOWN The addressed device is down, a non-operational state.
     *
     *  DEV_OPER_UP The addressed device is in a normal operations mode.
     *
     *  DEV_OPER_NONE The addressed device does not currently exist.
     */
typedef enum DevOperState {
#line 71 "mibdevs.mdf"
    DEV_OPER_DOWN = 1,
#line 74 "mibdevs.mdf"
    DEV_OPER_UP,
#line 77 "mibdevs.mdf"
    DEV_OPER_NONE
} DevOperState;


static __inline__ Bool
validDevOperState (int x)
{
    switch (x) {
#line 71 "mibdevs.mdf"
    case DEV_OPER_DOWN:
#line 74 "mibdevs.mdf"
    case DEV_OPER_UP:
#line 77 "mibdevs.mdf"
    case DEV_OPER_NONE:
        return TRUE;
    default:
        return FALSE;
    }
}

    /*
     * DevReqdState:
     *
     * Values to indicate the required state of a device. The required state
     * may differ from the current state, e.g. when a device is powering up or
     * when the desired state is changed from up to down on a running slot.
     * Changing the ReqdState forces an immediate change of the device to the
     * new state. However, there can be a gap between the time a state change
     * is requested and when it occurs.
     *
     *  DEV_REQD_DOWN The addressed device is required to be in the down,
     *                                  non-operational state.
     *
     *  DEV_REQD_UP The addressed device is required to be in a normal
     *                                  operating state.
     */
typedef enum DevReqdState {
#line 93 "mibdevs.mdf"
    DEV_REQD_DOWN = 1,
#line 97 "mibdevs.mdf"
    DEV_REQD_UP
} DevReqdState;


static __inline__ Bool
validDevReqdState (int x)
{
    switch (x) {
#line 93 "mibdevs.mdf"
    case DEV_REQD_DOWN:
#line 97 "mibdevs.mdf"
    case DEV_REQD_UP:
        return TRUE;
    default:
        return FALSE;
    }
}

    /*
     * DevUpStatus:
     *
     * Values to indicate the up status of a device. Values are only applicaple
     * when the operational state is up-dev-state.
     *
     *  DEV_UP_IDLE The device is not currently in use.
     *
     *  DEV_UP_RESERVED The device is not currently in use, but should not be
     *                                  used until all idle devices of the same
     *                                  time are in use.
     *
     *  DEV_UP_ASSIGNED The device is currently in use.
     */
typedef enum DevUpStatus {
#line 107 "mibdevs.mdf"
    DEV_UP_IDLE,
#line 110 "mibdevs.mdf"
    DEV_UP_RESERVED,
#line 114 "mibdevs.mdf"
    DEV_UP_ASSIGNED
} DevUpStatus;


static __inline__ Bool
validDevUpStatus (int x)
{
    switch (x) {
#line 107 "mibdevs.mdf"
    case DEV_UP_IDLE:
#line 110 "mibdevs.mdf"
    case DEV_UP_RESERVED:
#line 114 "mibdevs.mdf"
    case DEV_UP_ASSIGNED:
        return TRUE;
    default:
        return FALSE;
    }
}

    /*
     * DevStateProfile:
     *
     * A profile to store the current state of a device. This data may be
     * queried and/or set from SNMP or the command line interface. This profile
     * is not persistent, it is NOT stored in NVRAM. Modules wishing to monitor
     * the state of a device should register for profile updates for this type
     * of profile.
     *
     *  devAddr The physical address of the device whose state is stored in
     *                                  this profile.
     *
     *  devOperState The current operational state of the device.
     *
     *  devUpStatus The status of the device when in the up-dev-state. Ignored
     *                                  when not in the up state.
     *
     *  devReqdState The required operational state of the device. Changing
     *                                  this value initiates a state change.
     *                                  The change is complete when the
     *                                  device-state changes to match the
     *                                  reqd-state. This value is initialized
     *                                  from the administrative state of the
     *                                  device at system startup.
     */
typedef struct devStateProfile {
#line 156 "mibdevs.mdf"
    LogicalAddress                      devAddr;
#line 162 "mibdevs.mdf"
    DevOperState                        devOperState;
#line 167 "mibdevs.mdf"
    DevUpStatus                         devUpStatus;
#line 173 "mibdevs.mdf"
    DevReqdState                        devReqdState;
}
#if ( USERIF & CLI )
__PACK__
#endif
DevStateProfile;
#line 204 "mibdevs.mdf"

#endif /* MIBSLOTS_H */


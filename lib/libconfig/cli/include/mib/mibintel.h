    /*
     * Notice: file generated by MIBMAKE from mibintel.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibintel.mdf
     */
#line 3 "mibintel.mdf"
/*
 * $Id: mibintel.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1996 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 32 "mibintel.mdf"

#if ! defined( MIBINTEL_H )
# define MIBINTEL_H

# include "mibgen.h"
# include "mibglob.h"
# include "mibsct.h"

    /*
     * How to build the factory instance of this profile.
     */
extern ConstPtr
mibFactoryTelcoOptions( MibProfileType	mibType,
			Uint32		info );

    /*
     * Our parameter table is made external as the profile is used
     * within other profiles.
     */
extern const MibFieldComplexParams	telcoOptionsParams;

    /*
     * The size of the MPP nailed group list which will hold at most 8
     * numbers plus commas.
     */
#define MAX_NAILED_GRP_SIZE	15


    /*
     * CallMode:
     *
     * The call mode says how this profile can be used. The possible modes are:
     *
     *  CALL_ANS_AND_ORIG May answer or originate calls. May be used with
     *                                  callback.
     *
     *  CALL_ANS_ONLY Can only be used to answer calls. May be used with
     *                                  callback.
     *
     *  CALL_ORIG_ONLY Can only be used to originate calls. Callback is
     *                                  disabled in this mode.
     */
typedef enum CallMode {
#line 89 "mibintel.mdf"
    CALL_ANS_AND_ORIG,
#line 92 "mibintel.mdf"
    CALL_ANS_ONLY,
#line 95 "mibintel.mdf"
    CALL_ORIG_ONLY
} CallMode;


static __inline__ Bool
validCallMode (int x)
{
    switch (x) {
#line 89 "mibintel.mdf"
    case CALL_ANS_AND_ORIG:
#line 92 "mibintel.mdf"
    case CALL_ANS_ONLY:
#line 95 "mibintel.mdf"
    case CALL_ORIG_ONLY:
        return TRUE;
    default:
        return FALSE;
    }
}

    /*
     * TelcoOptions:
     *
     * Telco configuration options.
     *
     *  callMode Specifies if this profile can be used for incoming calls,
     *                                  outgoing calls, or both.
     *
     *  callback When true a call received from the named host requires
     *                                  callback security. The number dialed is
     *                                  the phoneNumber from this connection
     *                                  profile.
     *
     *  fill1 Filler to put next entry on 32-bit boundary
     *
     *  nailedMode Nailed channel usage for this connection.
     *
     *  mppNailedList All the nailed groups belonging to a session. MPP
     *                                  supports multiple groups.
     *
     *  nailedUpGroup Nailed-up group, hidden from the user interface,
     *                                  extracted from mpp-nailed-list.
     *
     *  ft1Caller Specifies if this side should initiate calls when a mix of
     *                                  nailed and switched calls are being
     *                                  used.
     *
     *  force56 If yes then inbound 64 kbps calls are connected at 56 kbps.
     *
     *  switchedCallType The type of bearer channel capability to set up for
     *                                  each switched call in the session.
     *
     *  callByCallID The call-by-call signaling value for PRI lines.
     *
     *  billingNumber A number used for billing purposes. This number, if
     *                                  present, is used as either a 'billing
     *                                  suffix' or the 'calling party number'.
     *
     *  transitNumber The string for use in the 'transit network IE' for PRI
     *                                  calling when going through a LEC.
     *
     *  expectCallback When true we expect calls to the named host will result
     *                                  in a callback from that host. This
     *                                  would occur if the remote host were
     *                                  authenticating us based on Caller ID.
     *
     *  dialoutAllowed When true, this connection is allowed to use the LAN
     *                                  modems to place outgoing calls.
     *
     *  callbackDelay Number of seconds to delay before dialing back. Values of
     *                                  0-3 seconds are treated as 3 seconds.
     */
typedef struct st_telcoOptions {
#line 121 "mibintel.mdf"
    CallMode                            callMode;
#line 127 "mibintel.mdf"
    Boolean                             callback;
#line 134 "mibintel.mdf"
    char                                fill1[ 3 ];
#line 140 "mibintel.mdf"
    NailedMode                          nailedMode;
#line 145 "mibintel.mdf"
    char                                mppNailedList[ MAX_NAILED_GRP_SIZE + 1 ];
#line 151 "mibintel.mdf"
    Uint16                              nailedUpGroup;
#line 158 "mibintel.mdf"
    Boolean                             ft1Caller;
#line 164 "mibintel.mdf"
    Boolean                             force56;
#line 168 "mibintel.mdf"
    SwitchedCallType                    switchedCallType;
#line 174 "mibintel.mdf"
#if (( NETIF & ( T1 | E1 )) || ( PLATFORM & TNT ))
    Uint16                              callByCallID;
#endif /* (( NETIF & ( T1 | E1 )) || ( PLATFORM & TNT )) */
#line 180 "mibintel.mdf"
    char                                billingNumber[ MAX_BILLING_NUMBER_LENGTH + 1 ];
#line 186 "mibintel.mdf"
#if (( NETIF & ( T1 | E1 )) || ( PLATFORM & TNT ))
    char                                transitNumber[ MAX_TRANSIT_NUMBER_LENGTH + 1 ];
#endif /* (( NETIF & ( T1 | E1 )) || ( PLATFORM & TNT )) */
#line 193 "mibintel.mdf"
    Boolean                             expectCallback;
#line 200 "mibintel.mdf"
    Boolean                             dialoutAllowed;
#line 207 "mibintel.mdf"
    Uint16                              callbackDelay;
    Uint32				rxBandwidth;
    Uint32				txBandwidth;
    char                                macAddress[ ETHER_ADDR_LEN ];
}
#if ( USERIF & CLI )
__PACK__
#endif
TelcoOptions;
#line 294 "mibintel.mdf"

#endif /* MIBINTEL_H */


    /*
     * Notice: file generated by MIBMAKE from mibtime.mdf
     * DO NOT EDIT THIS FILE!!!  Edit mibtime.mdf
     */
#line 2 "mibtime.mdf"
/*
 * $Id: mibtime.h,v 1.1.1.1 2011/08/17 11:11:56 brwang Exp $
 *
 *      Copyright (c) 1995 UTT Technologies, Inc.
 *      All rights reserved.
 *      Use of copyright notice does not imply publication.
 *
 *
 *                      CONFIDENTIAL INFORMATION
 *                      ------------------------
 *      This Document contains Confidential Information or Trade Secrets,
 *      or both, which are the property of UTT Technologies, Inc.
 *      This document may not be copied, reproduced, reduced to any
 *      electronic medium or machine readable form or otherwise duplicated
 *      and the information herein may not be used, disseminated or
 *      otherwise disclosed, except with the prior written consent of
 *      UTT Technologies, Inc.
 */

#line 24 "mibtime.mdf"

#if ! defined( MIBTIME_H )
#define MIBTIME_H

#include "mibgen.h"


    /* This file contains the profiles and enums and profiles
     *  related to system time and date keeping.
     */

extern const char* const	mibProfTimeDate;


    /*
     * ExpandedTime:
     *
     * The time of day is broken down into the three fields in the structure
     * below. No surprise:
     *
     *  hours Number of hours, in 24 hour format, where midnight is a zero,
     *                                  etc.
     *
     *  minutes Number of minutes since last hour.
     *
     *  seconds Number of seconds since last minute.
     */
typedef struct st_expandedTime {
#line 79 "mibtime.mdf"
    Byte                                hours;
#line 83 "mibtime.mdf"
    Byte                                minutes;
#line 87 "mibtime.mdf"
    Byte                                seconds;
}
#if ( USERIF & CLI )
__PACK__
#endif
ExpandedTime;

    /*
     * DayOfWeek:
     *
     * The days of the week.
     *
     *  SUNDAY
     *
     *  MONDAY
     *
     *  TUESDAY
     *
     *  WEDNESDAY
     *
     *  THURSDAY
     *
     *  FRIDAY
     *
     *  SATURDAY
     */
typedef enum DayOfWeek {
#line 127 "mibtime.mdf"
    SUNDAY = 1,
#line 128 "mibtime.mdf"
    MONDAY,
#line 129 "mibtime.mdf"
    TUESDAY,
#line 130 "mibtime.mdf"
    WEDNESDAY,
#line 131 "mibtime.mdf"
    THURSDAY,
#line 132 "mibtime.mdf"
    FRIDAY,
#line 133 "mibtime.mdf"
    SATURDAY
} DayOfWeek;


static __inline__ Bool
validDayOfWeek (int x)
{
    switch (x) {
#line 127 "mibtime.mdf"
    case SUNDAY:
#line 128 "mibtime.mdf"
    case MONDAY:
#line 129 "mibtime.mdf"
    case TUESDAY:
#line 130 "mibtime.mdf"
    case WEDNESDAY:
#line 131 "mibtime.mdf"
    case THURSDAY:
#line 132 "mibtime.mdf"
    case FRIDAY:
#line 133 "mibtime.mdf"
    case SATURDAY:
        return TRUE;
    default:
        return FALSE;
    }
}

    /*
     * Month:
     *
     * The months of the year.
     *
     *  JANUARY
     *
     *  FEBUARY
     *
     *  MARCH
     *
     *  APRIL
     *
     *  MAY
     *
     *  JUNE
     *
     *  JULY
     *
     *  AUGUST
     *
     *  SEPTEMBER
     *
     *  OCTOBER
     *
     *  NOVEMBER
     *
     *  DECEMBER
     */
typedef enum Month {
#line 141 "mibtime.mdf"
    JANUARY = 1,
#line 142 "mibtime.mdf"
    FEBUARY,
#line 143 "mibtime.mdf"
    MARCH,
#line 144 "mibtime.mdf"
    APRIL,
#line 145 "mibtime.mdf"
    MAY,
#line 146 "mibtime.mdf"
    JUNE,
#line 147 "mibtime.mdf"
    JULY,
#line 148 "mibtime.mdf"
    AUGUST,
#line 149 "mibtime.mdf"
    SEPTEMBER,
#line 150 "mibtime.mdf"
    OCTOBER,
#line 151 "mibtime.mdf"
    NOVEMBER,
#line 152 "mibtime.mdf"
    DECEMBER
} Month;


static __inline__ Bool
validMonth (int x)
{
    switch (x) {
#line 141 "mibtime.mdf"
    case JANUARY:
#line 142 "mibtime.mdf"
    case FEBUARY:
#line 143 "mibtime.mdf"
    case MARCH:
#line 144 "mibtime.mdf"
    case APRIL:
#line 145 "mibtime.mdf"
    case MAY:
#line 146 "mibtime.mdf"
    case JUNE:
#line 147 "mibtime.mdf"
    case JULY:
#line 148 "mibtime.mdf"
    case AUGUST:
#line 149 "mibtime.mdf"
    case SEPTEMBER:
#line 150 "mibtime.mdf"
    case OCTOBER:
#line 151 "mibtime.mdf"
    case NOVEMBER:
#line 152 "mibtime.mdf"
    case DECEMBER:
        return TRUE;
    default:
        return FALSE;
    }
}

    /*
     * ExpandedDate:
     *
     * Like the time, the date is broken down into its composite fields. The
     * fields are again no surpise:
     *
     *  days The day of the week, where Sunday is a one, and Saturday is a
     *                                  seven.
     *
     *  month The month of the year (i.e. 1..12).
     *
     *  date The day in the month (i.e. 1..31).
     *
     *  year The year (e.g. 1990).
     */
typedef struct st_expandedDate {
#line 185 "mibtime.mdf"
    DayOfWeek                           days;
#line 191 "mibtime.mdf"
    Month                               month;
#line 195 "mibtime.mdf"
    Byte                                date;
#line 199 "mibtime.mdf"
    Word                                year;
}
#if ( USERIF & CLI )
__PACK__
#endif
ExpandedDate;

    /*
     * TimeDateProfile:
     *
     * Get and set system date and time.
     *
     *  time Current system time.
     *
     *  date Current system date.
     */
typedef struct timeDate {
#line 239 "mibtime.mdf"
    ExpandedTime                        time;
#line 243 "mibtime.mdf"
    ExpandedDate                        date;
}
#if ( USERIF & CLI )
__PACK__
#endif
TimeDateProfile;
#line 274 "mibtime.mdf"

#endif /* MIBTIME_H */

